{"version":3,"file":"static/js/539.d3a43f39.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/filter/filterSelector.js","redux/contacts/contactsSelectors.js","webpack://goit-react-hw-08-phonebook/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Contacts/ContactsList.module.css?7ecc","webpack://goit-react-hw-08-phonebook/./src/components/Contacts/ContactElement/ContactElement.module.css?17fa","components/Contacts/ContactElement/ContactElement.jsx","components/Contacts/ContactsList.jsx","pages/Contacts.jsx"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","export const selectFilter = state => state.filter;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilter } from 'redux/filter/filterSelector';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectFilter, selectContacts],\n  (filter, items) => {\n    const normalizedFilter = filter.toLowerCase();\n    const contacts = items;\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"section__title\":\"Section_section__title__5once\"};","import css from './Section.module.css';\nimport PropTypes from \"prop-types\";\n\nexport const Section = ({ title, children }) => {\n  return (\n    <>\n      <h2 className={css.section__title}>{title}</h2>\n      {children}\n    </>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"formAddBook\":\"ContactForm_formAddBook__5RjJI\",\"formAddBook__label\":\"ContactForm_formAddBook__label__bDZz+\",\"formAddBook__input\":\"ContactForm_formAddBook__input__XAEnf\"};","import css from './ContactForm.module.css';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\nimport { addContact } from 'redux/contacts/contactsOperation';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const comparisonName = (name, number) => {\n    contacts.find(\n      contact => name.toLowerCase() === contact.name.toLocaleLowerCase()\n    )\n      ? alert(`${name} is already in contacts`)\n      : dispatch(addContact({name, number}));\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.target;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n    comparisonName(name, number);\n    form.reset();\n  };\n\n  return (\n    <form className={css.formAddBook} onSubmit={handleSubmit}>\n      <label className={css.formAddBook__label}>\n        Name\n        <input\n          className={css.formAddBook__input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={css.formAddBook__label}>\n        Phone Number\n        <input\n          className={css.formAddBook__input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"formAddBook__label\":\"Filter_formAddBook__label__iwm-l\",\"formAddBook__input\":\"Filter_formAddBook__input__LqivW\"};","import css from './Filter.module.css';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { selectFilter } from 'redux/filter/filterSelector';\nimport { setValueFilter } from 'redux/filter/filterSlice';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const value = e.target.value;\n    dispatch(setValueFilter(value));\n  };\n\n  return (\n    <label className={css.formAddBook__label}>\n      Find contacts by name\n      <input\n        className={css.formAddBook__input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleChange}\n      />\n    </label>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contact__list\":\"ContactsList_contact__list__Dhg5y\"};","// extracted by mini-css-extract-plugin\nexport default {\"contact__item\":\"ContactElement_contact__item__PxEi8\",\"contact__name\":\"ContactElement_contact__name__BYjXE\"};","import css from './ContactElement.module.css';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactsOperation';\n\nexport const ContactElement = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContact(contact.id));\n\n  return (\n    <div className={css.contact__item}>\n      <span className={css.contact__name}>\n        {contact.name}: {contact.number}\n      </span>\n      <button type=\"button\"\n        onClick={handleDelete}\n      >\n        Delete\n      </button>\n    </div>\n  );\n};\n\nContactElement.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import css from './ContactsList.module.css';\nimport { ContactElement } from './ContactElement/ContactElement';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/contactsSelectors';\n\nexport const ContactsList = () => {\n\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ul className={css.contact__list}>\n      {visibleContacts.map(contact => (\n        <li key={contact.id}>\n          <ContactElement contact={contact} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { selectIsLoading, selectError } from 'redux/contacts/contactsSelectors';\nimport { useEffect } from 'react';\n\nimport { Section } from 'components/Section/Section';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactsList } from 'components/Contacts/ContactsList';\n\nimport { fetchContacts } from 'redux/contacts/contactsOperation';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  return (\n    <div>\n      <Section title={'Phonebook'}>\n        <ContactForm />\n      </Section>\n      <Section title={'Contacts'}>\n        <Filter />\n        {isLoading && !error && <b>Loading Phone contacts...</b>}\n        <ContactsList />\n      </Section>\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectFilter","state","filter","selectContacts","contacts","items","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","normalizedFilter","toLowerCase","contact","includes","Section","title","children","className","css","ContactForm","useSelector","dispatch","useDispatch","onSubmit","evt","preventDefault","form","target","number","toLocaleLowerCase","alert","addContact","comparisonName","elements","reset","type","pattern","required","Filter","onChange","e","setValueFilter","ContactElement","onClick","deleteContact","id","ContactsList","visibleContacts","useEffect","fetchContacts"],"sourceRoot":""}